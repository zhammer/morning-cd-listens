service: listens

provider:
  name: aws
  runtime: python3.7
  apiKeys:
    - listens-service-key
  tracing: True
  iamRoleStatements:
    - Effect: Allow
      Action:
        - SNS:Publish
      Resource:
        Ref: ListenAddedSNSTopic
    - Effect: "Allow"
      Action:
        - "xray:PutTraceSegments"
        - "xray:PutTelemetryRecords"
      Resource:
        - "*"

package:
  exclude:
    - "**"
  include:
    - listens/**

functions:
  rest:
    description: Function for all listens service endpoints
    handler:
      listens/delivery/aws_lambda/rest.handler
    events:
      - http:  # get listen
          path: /{id}
          method: get
          private: true
      - http:  # get listens
          path: /
          method: get
          private: true
      - http:  # submit listen
          path: /
          method: post
          private: true
    environment:
      DATABASE_CONNECTION_STRING: ${self:custom.secrets.DATABASE_CONNECTION_STRING}
      SPOTIFY_CLIENT_ID: ${self:custom.secrets.SPOTIFY_CLIENT_ID}
      SPOTIFY_CLIENT_SECRET: ${self:custom.secrets.SPOTIFY_CLIENT_SECRET}
      SUNLIGHT_SERVICE_API_KEY: ${self:custom.secrets.SUNLIGHT_SERVICE_API_KEY}
      LISTEN_ADDED_SNS_TOPIC: ${self:custom.secrets.LISTEN_ADDED_SNS_TOPIC}

custom:
  customDomain:
    domainName: micro.morningcd.com
    certificateName: "*.morningcd.com"
    basePath: listens
  pythonRequirements:
    dockerizePip: non-linux
  secrets:
    DATABASE_CONNECTION_STRING: ${env:DATABASE_CONNECTION_STRING}
    SPOTIFY_CLIENT_ID: ${env:SPOTIFY_CLIENT_ID}
    SPOTIFY_CLIENT_SECRET: ${env:SPOTIFY_CLIENT_SECRET}
    SUNLIGHT_SERVICE_API_KEY: ${env:SUNLIGHT_SERVICE_API_KEY}
    LISTEN_ADDED_SNS_TOPIC:
      Ref: ListenAddedSNSTopic

resources:
  Resources:
    ListenAddedSNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: Listen Added SNS Topic
        TopicName: ListenAddedSNSTopic

plugins:
  - serverless-python-requirements
  - serverless-domain-manager
  - serverless-plugin-tracing
